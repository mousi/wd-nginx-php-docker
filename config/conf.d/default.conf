server {
    listen 80;
    # Uncomment and put the ssl_keys in config/custom_conf/ssl_keys if you need ssl
    # listen 443 ssl;
    # ssl_certificate /config/ssl_keys/cert.pem;
    # ssl_certificate_key /config/ssl_keys/key.pem;
    # error_page 497 301 =307 https://$http_host$request_uri;
    server_name _;
    root /var/www;
    index index.php index.html index.htm;
    
    error_page 400 /error/400.html;
    error_page 401 /error/401.html;
    error_page 403 /error/403.html;
    error_page 404 /error/404.html;
    error_page 500 /error/500.html;
    error_page 501 /error/501.html;
    error_page 502 /error/502.html;
    error_page 503 /error/503.html;
    error_page 520 /error/520.html;
    error_page 521 /error/521.html;
    error_page 533 /error/533.html;
    
    location /error/ {
       alias /config/error_pages/;
       internal;
    }

    location /books {
        # Uncomment and create the .htpasswd file in config/custom_conf/ if you need authentication
        # auth_basic "Restricted Content";
        # auth_basic_user_file /config/.htpasswd;

        location ~ ^/images.*\.(gif|png|ico|jpg)$ {
            expires 31d;
        }

        location ~ .(js|css|eot|svg|woff|ttf)$ {
            expires 31d;
        }
    }

    location ~ \.php$ {
       include /etc/nginx/fastcgi_params;
       fastcgi_param   SCRIPT_FILENAME  $document_root$fastcgi_script_name;
       fastcgi_pass    php:9000;
    }
    
    # Example config for a node container named mynode
    # location /node/ {
    #    proxy_pass http://mynode:3000/;
    #    proxy_http_version 1.1;
    #    proxy_set_header Upgrade $http_upgrade;
    #    proxy_set_header Connection 'upgrade';
    #    proxy_set_header Host $host;
    #    proxy_cache_bypass $http_upgrade;
    # }
}
